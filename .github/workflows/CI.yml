name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    name: Tests (${{ matrix.python }} / ${{ matrix.variant }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - python: "3.8"
            variant: gil
            maturin-flags: ""
            pytest-cmd: "pytest tests -q"
            gil-env: ""
          - python: "3.13t"
            variant: free-threaded
            maturin-flags: "--no-default-features"
            pytest-cmd: "python -X gil=0 -m pytest tests -q"
            gil-env: "0"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python }}
      - name: Create virtualenv
        run: python -m venv .venv
      - name: Install tooling
        run: |
          . .venv/bin/activate
          pip install --upgrade pip
          pip install maturin pytest
      - name: Build extension
        run: |
          . .venv/bin/activate
          maturin develop --release ${{ matrix.maturin-flags }}
        env:
          PYTHON_GIL: ${{ matrix.gil-env }}
      - name: Run pytest
        run: |
          . .venv/bin/activate
          ${{ matrix.pytest-cmd }}
        env:
          PYTHON_GIL: ${{ matrix.gil-env }}

  linux-gil:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: PyO3/maturin-action@v1
        with:
          manylinux: auto
          command: build
          args: --release --sdist -o dist --find-interpreter
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-gil
          path: dist

  windows-gil:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release -o dist --find-interpreter
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-gil
          path: dist

  macos-gil:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release -o dist --target universal2-apple-darwin --find-interpreter
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-gil
          path: dist

  linux-free-threaded:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v6
        with:
          python-version: "3.13t"
      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install maturin
      - name: Build free-threaded wheels
        run: |
          python -X gil=0 -m pip install -U pip maturin
          python -X gil=0 -m maturin build --release --no-default-features -o dist
        env:
          PYTHON_GIL: 0
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-free-threaded
          path: dist

  macos-free-threaded:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v6
        with:
          python-version: "3.13t"
      - name: Install tooling
        run: |
          python -X gil=0 -m pip install -U pip maturin
      - name: Build free-threaded wheels
        run: |
          python -X gil=0 -m maturin build --release --no-default-features -o dist --target universal2-apple-darwin
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-free-threaded
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - linux-gil
      - macos-gil
      - windows-gil
      - linux-free-threaded
      - macos-free-threaded
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'))
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing dist/*
